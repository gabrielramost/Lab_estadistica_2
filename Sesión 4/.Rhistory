library(rio)
data=import("https://github.com/gabrielramost/Lab_estadistica_2/blob/main/Sesi%C3%B3n%204/trabajadores.sav?raw=true")
library(rio)
data=import("https://github.com/gabrielramost/Lab_estadistica_2/blob/main/Sesi%C3%B3n%204/trabajadores.sav?raw=true")
names(data)
data$sexo<-as.factor(data$sexo)
levels(data$sexo)<-c("Mujer","Hombre")
levels(data$sexo)
data$catlab<-as.ordered(data$catlab)
levels(data$catlab)<-c("Administrativo","Seguridad","Directivo")
levels(data$catlab)
data$minoría<-as.factor(data$minoría)
levels(data$minoría)<-c("No","Si")
levels(data$minoría)
data$directivo<-as.factor(data$directivo)
levels(data$directivo)<-c("No","Si")
levels(data$directivo)
modelo1<-lm(salario_actual~educ+ antiguedad + experiencia, data)
summary(modelo1)
modelo2<-lm(salario_actual~salario_inicial + antiguedad + experiencia, data)
summary(modelo2)
library(stargazer)
stargazer(modelo1,modelo2, type ="text")
tanova=anova(modelo1,modelo2)
tanova
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
tanova=anova(modelo1,modelo2)
tanova
stargazer(tanova, type = text)
stargazer(tanova)
tanova
tanova$`Pr(>F)`
tanova$Res.Df
library(modelsummary)
install.packages("modelsummary")
modelsummary(modelo1,modelo2)
library(modelsummary)
modelsummary(modelo1,modelo2)
modelsummary(modelo1,modelo2, output = "kableExtra")
models = list(modelo1,modelo2)
modelsummary(models, output = "kableExtra")
modelsummary(models, output = "text")
library(modelsummary)
models = list(modelo1,modelo2)
modelsummary(models, output = "kableExtra")
tanova=anova(modelo1,modelo2)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
library(dplyr)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
?kable
kable?
library(magrittr)
library(knitr)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
tanova=anova(modelo2,modelo1)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
tanova=anova(modelo1,modelo2)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
library(rio)
data=import("https://github.com/gabrielramost/Lab_estadistica_2/blob/main/Sesi%C3%B3n%204/trabajadores.sav?raw=true")
names(data)
data$sexo<-as.factor(data$sexo)
levels(data$sexo)<-c("Mujer","Hombre")
levels(data$sexo)
data$catlab<-as.ordered(data$catlab)
levels(data$catlab)<-c("Administrativo","Seguridad","Directivo")
levels(data$catlab)
data$minoría<-as.factor(data$minoría)
levels(data$minoría)<-c("No","Si")
levels(data$minoría)
data$directivo<-as.factor(data$directivo)
levels(data$directivo)<-c("No","Si")
levels(data$directivo)
modelo1<-lm(salario_actual~educ+ antiguedad + experiencia, data)
summary(modelo1)
modelo2<-lm(salario_actual~salario_inicial + antiguedad + experiencia, data)
summary(modelo2)
library(stargazer)
stargazer(modelo1,modelo2, type ="text")
library(dplyr)
library(magrittr)
library(knitr)
tanova=anova(modelo1,modelo2)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = T)
FALSE
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
tanova=anova(modelo1,modelo2. na.ommit = T)
tanova=anova(modelo1,modelo2. na.ommit)
tanova=anova(modelo1,modelo2)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
tanova=aov(modelo1,modelo2)
tanova=anova(modelo1,modelo2)
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
taniva
tanova
modelo2<-lm(salario_actual~ antiguedad + experiencia, data)
summary(modelo2)
library(dplyr)
library(magrittr)
library(knitr)
tanova=anova(modelo1,modelo2)
tanova
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
modelo1<-lm(salario_actual~educ+ antiguedad + experiencia, data)
summary(modelo1)
modelo2<-lm(salario_actual~salario_inicial + educ + antiguedad + experiencia, data)
summary(modelo2)
library(stargazer)
stargazer(modelo1,modelo2, type ="text")
library(modelsummary)
models = list(modelo1,modelo2)
modelsummary(models, output = "kableExtra")
library(dplyr)
library(magrittr)
library(knitr)
tanova=anova(modelo1,modelo2)
tanova
kable(tanova,
caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
plot(modelo2,1) #Se espera que la línea roja tienda a la horizontal
mean(modelo2$residuals) # Se espera que el promedio de los residuos sea cercano a 0
plot(modelo2,3) # Se espera que la línea roja debe tender a horizontal.
library(lmtest)
bptest(modelo2) #H0 = Modelo homocedástico, ojo aquí buscamos que sea mayor a 0.05 para cumplir con el requisito
plot(modelo2,2) # En este caso la expectativa es que los puntos se acerquen lo más posible a la línea oblicua del gráfico que representa una distribución normal
shapiro.test(modelo2$residuals) #H0= Hay normalidad
library(DescTools)
VIF(modelo2) #>5 es problemático
plot(modelo2,5) #miramos valores fuera de las lineas punteadas
checModelo2=as.data.frame(influence.measures(modelo2)$is.inf)
checModelo2[checModelo2$cook.d & checModelo2$hat,] #visualizamos valores
modelo2b=formula(scale(salario_actual)~scale(salario_inicial)+scale(educ)+scale(antiguedad)+scale(experiencia))
reg2b=lm(modelo2b,data)
model2b=list(reg2b)
modelsummary(model2b, title = "Regresion: modelo con \ncoeficientes estandarizados",
stars = TRUE,
output = "kableExtra")
library(rio)
data=import("https://github.com/gabrielramost/Lab_estadistica_2/blob/main/Sesi%C3%B3n%204/IOP_1119_01_02_D.sav?raw=true")
data=subset(data, SERIE== 2019)
#Codificación
data$P12A[data$P12A == "2"] <- 0
data$P12B[data$P12B == "2"] <- 0
data$P12C[data$P12C == "2"] <- 0
data$P12D[data$P12D == "2"] <- 0
data$P12E[data$P12E == "2"] <- 0
data$P12F[data$P12F == "2"] <- 0
data$P12G[data$P12G == "2"] <- 0
data$P12H[data$P12H == "2"] <- 0
data$P12A[data$P12A == "98"] <- NA
data$P12B[data$P12B == "98"] <- NA
data$P12C[data$P12C == "98"] <- NA
data$P12D[data$P12D == "98"] <- NA
data$P12E[data$P12E == "98"] <- NA
data$P12G[data$P12G == "98"] <- NA
data$P12H[data$P12H == "98"] <- NA
# Creación del indice
data$indiceAC=data$P12A+data$P12B+data$P12C+data$P12D+data$P12E+data$P12F+data$P12G+data$P12H
table(data$indiceAC)
hist(data$indiceAC)
data$SEXO=as.factor(data$SEXO)
data$SEXO=factor(data$SEXO,levels=levels(data$SEXO) ,labels=c("Hombre","Mujer"))
data$NIVEDU=as.factor(data$NIVEDU)
data$NIVEDU=factor(data$NIVEDU,levels=levels(data$NIVEDU) ,labels=c("Ninguna","Inicial","Primaria"
,"SecundariaIncompleta","SecundariaCompleta",
"SuperiorTecnicaincompleta",
"Superiortecnica completa","Superior universitaria incompleta"
,"Superior universitaria completa","Postgrado"))
data$NSEGRUP=as.factor(data$NSEGRUP)
data$NSEGRUP=factor(data$NSEGRUP,levels=levels(data$NSEGRUP) ,labels=c("AB","C","DE"))
data$EDAD = as.numeric(data$EDAD)
table(data$indiceAC)
library(stargazer)
modelo1<-glm(indiceAC~EDAD,
family=poisson,
data=data)
stargazer(modelo1,type = "text",intercept.bottom = FALSE,style="all2")
edad=coef(modelo1)[['EDAD']] #Guardamos el coeficiente
E_Edad=exp(edad) #Le sacamos la exponencial
(CambioEdad=100*(1-1/E_Edad)) #Al ser negativo, se le saca 1-1/exp(B)
modelsummary(modelo1,
fmt=f,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión Poisson para Interpretación",
stars = TRUE,
output = "kableExtra")
library(modelsummary)
f <- function(x) format(x, digits = 4, scientific = FALSE)
modelsummary(modelo1,
fmt=f,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión Poisson para Interpretación",
stars = TRUE,
output = "kableExtra")
library(modelsummary)
modelsummary(modelo1,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión Poisson para Interpretación",
stars = TRUE,
output = "kableExtra")
library(stargazer)
modelo1<-glm(indiceAC~EDAD,
family=poisson (link = "log"),
data=data)
stargazer(modelo1,type = "text",intercept.bottom = FALSE,style="all2")
library(modelsummary)
modelsummary(modelo1,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión Poisson para Interpretación",
stars = TRUE,
output = "kableExtra")
modelo2<-glm(indiceAC~SEXO,
family=poisson (link = "log"),
data=data)
stargazer(modelo2,type = "text",intercept.bottom = FALSE,style="all2") #categoria de referencia Hombre
modelsummary(modelo1,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión Poisson para Interpretación",
stars = TRUE,
output = "kableExtra")
modelsummary(modelo2,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión Poisson para Interpretación",
stars = TRUE,
output = "kableExtra")
stargazer(modelo1,modelo2, type ="text")
anova(modelo1,modelo2, test = "Chisq")
library(ggplot2)
dotwhisker::dwplot(list(Poisson1=modelo1,Poisson2=modelo2),exp=T)  +
scale_color_discrete(name="Modelos para: Acoso callejero") +
geom_vline(xintercept = 1,
colour = "grey60",
linetype = 2)
overdispersion=AER::dispersiontest(modelo1,alternative='greater')$ p.value<0.05
underdispersion=AER::dispersiontest(modelo1,alternative='less')$ p.value<0.05
underdispersion=AER::dispersiontest(modelo1,alternative='less')$ p.value<0.05
# tabla
testResult=as.data.frame(rbind(overdispersion,underdispersion))
names(testResult)='Es probable?'
testResult
VarY=data$indiceAC #Variable dependiente
list(media=mean(VarY,na.rm=T),varianza=var(VarY,na.rm=T),razon=var(VarY,na.rm=T)/mean(VarY,na.rm=T))
reg1quasi = glm(indiceAC~EDAD, family = quasipoisson(link = "log"), data = data)
stargazer(reg1quasi,type = "text",intercept.bottom = FALSE,style="all2")
```{r}
anova(modelo1,reg1quasi, test = "Chisq")
dotwhisker::dwplot(list(Poisson1=modelo1,QuasiPoisson=reg1quasi),exp=T)  +
scale_color_discrete(name="Modelos para: Acoso callejero") +
geom_vline(xintercept = 1,
colour = "grey60",
linetype = 2)
modelsummary(reg1quasi,
exponentiate = T,
statistic = 'conf.int',
title = "EXP() de la Regresión QuasiPoisson para Interpretación",
stars = TRUE,
output = "kableExtra")
stargazer(modelo1,reg1quasi,type = "text",intercept.bottom = FALSE,style="all2")
anova(modelo1,reg1quasi, test = "Chisq")
cbind(sePoi=se.coef(modelo1),seQuasiPoi=se.coef(reg1quasi))
library(arm)
cbind(sePoi=se.coef(modelo1),seQuasiPoi=se.coef(reg1quasi))
summary(modelo1)$dispersion; summary(reg1quasi)$dispersion
library(MASS)
nb <- glm.nb(indiceAC~EDAD, data = data)
stargazer(nb,type = "text",intercept.bottom = FALSE,style="all2")
anova(modelo1,reg1quasi,nb, test = "Chisq")
stargazer(modelo1,reg1quasi,nb, type = "text",intercept.bottom = FALSE,style="all2")
anova(modelo1,reg1quasi,nb, test = "Chisq") %>%
kable(caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
library(dplyr)
anova(modelo1,reg1quasi,nb, test = "Chisq") %>%
kable(caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
library(knitr)
anova(modelo1,reg1quasi,nb, test = "Chisq") %>%
kable(caption = "Tabla ANOVA para comparar modelos")%>%kableExtra::kable_styling(full_width = FALSE)
library(ggplot2)
dotwhisker::dwplot(list(Poisson1=modelo1,QuasiPoisson=reg1quasi,NegativeBinomial=nb),exp=T)  +
scale_color_discrete(name="Modelos para: Acoso callejero") +
geom_vline(xintercept = 1,
colour = "grey60",
linetype = 2)
iop=import("https://github.com/gabrielramost/Lab_estadistica_2/blob/main/Sesi%C3%B3n%204/IOP_0717_01_D.sav?raw=true")
data = subset(iop, select = c(NRO, P17, P3B, P8, P14, P30, P19, P92, EDAD, SEXO))
library(car)
data$no_cong = recode(data$P17, "2 = 1 ; 1 = 0 ; 8:9 = NA")
data$no_cong = as.factor(data$no_cong)
plot(data$no_cong)
data$conf_con = factor(ifelse(data$P3B == 1,1,
ifelse(data$P3B == 2,1,
ifelse(data$P3B == 3,2,
ifelse(data$P3B == 4,2,0)))))
data$conf_con[data$conf_con == 0] <- NA
data$conf_con = factor(data$conf_con, levels = c(1:2), labels = c("Trust","NoTrust"))
data$sit_eco = ifelse(data$P8 == 1,1,
ifelse(data$P8 == 2,1,
ifelse(data$P8 == 3,2,
ifelse(data$P8 == 4,2,
ifelse(data$P8 == 5,2,0)))))
data$sit_eco[data$sit_eco == 0] <- NA
data$sit_eco = factor(data$sit_eco, levels = c(1:2), labels = c("Better","Worst"))
data$ideologia = recode(data$P14, "88:99 = NA")
data$demo = ifelse(data$P19 == 1,1,
ifelse(data$P19 == 2,1,
ifelse(data$P19 == 3,2,
ifelse(data$P19 == 4,2,0))))
data$demo[data$demo == 0] <- NA
data$demo = factor(data$demo, levels = c(1:2), labels = c("Yes","No"))
data$EDAD=as.numeric(data$EDAD)
data$sexo = as.factor(data$SEXO)
levels(data$sexo) = c("Hombre", "Mujer")
data = na.omit(data)
set.seed(2019)
modelo = glm(no_cong ~ EDAD, family = binomial, data = data)
modelor = glm(no_cong ~ EDAD + conf_con, family = binomial, data = data)
modelog = glm(no_cong ~ EDAD + conf_con + demo, family = binomial, data = data)
modelo1 = glm(no_cong ~ EDAD + conf_con + demo + sit_eco, family = binomial, data = data)
stargazer(modelo, modelor,modelog,modelo1, type = "text")
#Edad
exp(coef(modelo1)["EDAD"])
#Confianza en el congreso
exp(coef(modelo1)["conf_conNoTrust"])
#Democracia
exp(coef(modelo1)["demoNo"])
modelsrl=list(modelo,modelor,modelog,modelo1)
modelsummary(modelsrl,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
modelsummary(modelog,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
modelsummary(modelog,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
library(margins)
model = margins(modelog) #visualicemos esto en la consola
margins=summary(model)#Otra forma, aqui vemos los AME. visualicemos esto en la consola
margins$ef = margins$AME*100
margins
modelsummary(modelo1,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
modelsummary(modelo1,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
library(margins)
model = margins(modelo1) #visualicemos esto en la consola
margins=summary(model)#Otra forma, aqui vemos los AME. visualicemos esto en la consola
margins$ef = margins$AME*100
margins
modelsummary(modelog,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Logísticas (Coeficientes Exponenciados)",
stars = TRUE,
output = "kableExtra")
library(margins)
model = margins(modelog) #visualicemos esto en la consola
margins=summary(model)#Otra forma, aqui vemos los AME. visualicemos esto en la consola
margins$ef = margins$AME*100
margins
margins$low_f = 100*margins$lower
margins$upp_f = 100*margins$upper
library(ggplot2)
base= ggplot(margins,aes(x=factor, y=ef)) + geom_point() +  geom_errorbar(aes(ymin=low_f, ymax=upp_f)) +
geom_point(shape=21, size=3, fill="white") +
ylim(-10,20)
base
ToInput1 <- data.frame(conf_con=c("NoTrust"),demo=c("No"), EDAD=18)
predict(object = modelog, newdata = ToInput1, type = "response")
ToInput1 <- data.frame(conf_con=c("Trust"),demo=c("Yes"),
EDAD=18)
predict(object = modelog, newdata = ToInput1, type = "response")
library(survival)
library(survminer)
head(lung)
summary(lung$time)
#Recodificamos para que 0 sea la ocurrencia:
lung$status1 = ifelse(lung$status == 2,1,0)
table(lung$status1)
lung$survival=with(lung,Surv(time = time,
event =  status1))
library(ggplot2)
library(ggfortify)
KM.generico = survfit(survival ~ 1, data = lung)
ejeX='DAYS\n Curva cae cuando ocurre un fallecimiento'
ejeY='Probabilidad \n(Sobrevivir)'
titulo="Curva de Sobrevivencia"
autoplot(KM.generico,xlab=ejeX,ylab=ejeY, main = titulo,conf.int = F)
KM_H1=formula(survival ~ sex)
KM.sex = coxph(KM_H1, data = lung)
###
ejeX='DAYS\n Curva cae cuando ocurre un fallecimiento'
ejeY='Probabilidad \n(Sobrevivir)'
titulo="Curva de Sobrevivencia"
autoplot(KM.sex,xlab=ejeX,ylab=ejeY,
main = titulo,conf.int = F)  +
labs(colour = "Impacto del género") +
scale_color_discrete(labels = c("Hombre", "Mujer"))
?autoplot
library(ggplot2)
autoplot(KM.sex,xlab=ejeX,ylab=ejeY,
main = titulo,conf.int = F)  +
labs(colour = "Impacto del género") +
scale_color_discrete(labels = c("Hombre", "Mujer"))
KM_H1=formula(survival ~ sex)
KM.sex = survfit(KM_H1, data = lung)
###
ejeX='DAYS\n Curva cae cuando ocurre un fallecimiento'
ejeY='Probabilidad \n(Sobrevivir)'
titulo="Curva de Sobrevivencia"
autoplot(KM.sex,xlab=ejeX,ylab=ejeY,
main = titulo,conf.int = F)  +
labs(colour = "Impacto del género") +
scale_color_discrete(labels = c("Hombre", "Mujer"))
LogRank=survdiff(KM_H1, data = lung)
LogRank$pvalue
autoplot(KM.sex,xlab=ejeX,ylab=ejeY,
main = titulo,conf.int = T)+
labs(colour = "Impacto del género") +
scale_color_discrete(labels = c("Hombre", "Mujer"))
COX_H1= formula(survival~factor(sex)+age)
rcox1 <- coxph(COX_H1,data=lung)
summary(rcox1)
(sex=abs(1-exp(coef(rcox1)[1])))
modelsummary(rcox1,
exponentiate = c(F,T),
statistic = 'conf.int',
title = "Regresión Cox",
stars = TRUE,
output = "kableExtra")
COX_H1= formula(survival~factor(sex)+age)
rcox1 <- coxph(COX_H1,data=lung)
summary(rcox1)
modelsummary(rcox1,
exponentiate = T,
statistic = 'conf.int',
title = "Regresión Cox",
stars = TRUE,
output = "kableExtra")
(sex=abs(1-exp(coef(rcox1)[1])))
library(survminer)
ggforest(rcox1, data = lung,main = "¿Quiénes tienen mayor riesgo de volver a ser encarcelados?")
View(lung)
library(survminer)
ggforest(rcox1, data = lung, main = "¿Quiénes tienen mayor riesgo de volver a ser encarcelados?")
ggforest(rcox1, data = lung, main = "¿Quiénes tienen mayor riesgo de morir por cancer?")
library(survminer)
ggforest(rcox1,lung, main = "¿Quiénes tienen mayor riesgo de morir por cancer?")
ggforest(rcox1, main = "¿Quiénes tienen mayor riesgo de morir por cancer?")
ggforest(rcox1, data = lung, main = "¿Quiénes tienen mayor riesgo de morir por cancer?")
